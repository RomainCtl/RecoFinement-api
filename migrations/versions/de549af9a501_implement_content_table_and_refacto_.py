"""Implement Content table and refacto schema

Revision ID: de549af9a501
Revises: 9bfc616d547a
Create Date: 2020-12-21 18:40:22.741379

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'de549af9a501'
down_revision = '9bfc616d547a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('content',
                    sa.Column('content_id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('rating', sa.Float(), nullable=True),
                    sa.Column('rating_count', sa.Integer(), nullable=True),
                    sa.Column('popularity_score', sa.Float(), nullable=True),
                    sa.PrimaryKeyConstraint('content_id')
                    )
    op.create_index(op.f('ix_content_content_id'),
                    'content', ['content_id'], unique=False)
    op.create_table('bad_recommendation_content',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('content_id', sa.Integer(), nullable=False),
                    sa.Column('reason_categorie', sa.Text(), nullable=False),
                    sa.Column('reason', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['content_id'], ['content.content_id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.user_id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint(
                        'user_id', 'content_id', 'reason_categorie')
                    )
    op.create_table('content_genres',
                    sa.Column('content_id', sa.Integer(), nullable=False),
                    sa.Column('genre_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['content_id'], ['content.content_id'], ),
                    sa.ForeignKeyConstraint(
                        ['genre_id'], ['genre.genre_id'], ),
                    sa.PrimaryKeyConstraint('content_id', 'genre_id')
                    )
    op.create_table('meta_user_content',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('content_id', sa.Integer(), nullable=False),
                    sa.Column('rating', sa.Integer(), nullable=True),
                    sa.Column('last_rating_date',
                              sa.DateTime(), nullable=True),
                    sa.Column('review_see_count', sa.Integer(), nullable=True),
                    sa.Column('last_review_see_date',
                              sa.DateTime(), nullable=True),
                    sa.Column('count', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['content_id'], ['content.content_id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.user_id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('user_id', 'content_id')
                    )
    op.create_table('recommended_content',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('content_id', sa.Integer(), nullable=False),
                    sa.Column('score', sa.Float(), nullable=True),
                    sa.Column('engine', sa.String(), nullable=True),
                    sa.Column('engine_priority', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['content_id'], ['content.content_id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.user_id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('user_id', 'content_id')
                    )
    op.create_table('similars_content',
                    sa.Column('content_id0', sa.Integer(), nullable=False),
                    sa.Column('content_id1', sa.Integer(), nullable=False),
                    sa.Column('similarity', sa.Float(), nullable=True),
                    sa.Column('content_type0', postgresql.ENUM('APPLICATION', 'BOOK', 'GAME', 'MOVIE',
                                                               'SERIE', 'TRACK', name='contenttype', create_type=False), nullable=True),
                    sa.Column('content_type1', postgresql.ENUM('APPLICATION', 'BOOK', 'GAME', 'MOVIE',
                                                               'SERIE', 'TRACK', name='contenttype', create_type=False), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['content_id0'], ['content.content_id'], ),
                    sa.ForeignKeyConstraint(
                        ['content_id1'], ['content.content_id'], ),
                    sa.PrimaryKeyConstraint('content_id0', 'content_id1')
                    )
    op.create_table('recommended_content_for_group',
                    sa.Column('group_id', sa.Integer(), nullable=False),
                    sa.Column('content_id', sa.Integer(), nullable=False),
                    sa.Column('score', sa.Float(), nullable=True),
                    sa.Column('engine', sa.String(), nullable=True),
                    sa.Column('engine_priority', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['content_id'], ['content.content_id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['group_id'], ['group.group_id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('group_id', 'content_id')
                    )
    op.add_column('application', sa.Column(
        'content_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_application_content_id'),
                    'application', ['content_id'], unique=False)
    op.drop_index('ix_application_app_id', table_name='application')
    op.drop_constraint('application_pkey', 'application', type_='primary')
    op.create_primary_key('app_pkey', 'application', ['content_id'])
    op.create_foreign_key(None, 'application', 'content', ['content_id'], [
                          'content_id'], ondelete='CASCADE')
    op.drop_column('application', 'reviews')
    op.drop_column('application', 'app_id')
    op.drop_column('application', 'rating')
    op.drop_column('application', 'popularity_score')
    op.add_column('book', sa.Column(
        'content_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_book_content_id'), 'book',
                    ['content_id'], unique=False)
    op.drop_index('ix_book_isbn', table_name='book')
    op.create_index(op.f('ix_book_isbn'), 'book', ['isbn'], unique=True)
    op.create_foreign_key(None, 'book', 'content', ['content_id'], [
                          'content_id'], ondelete='CASCADE')
    op.drop_constraint('book_pkey', 'book', type_='primary')
    op.create_primary_key('book_pkey', 'book', ['content_id'])
    op.drop_column('book', 'rating')
    op.drop_column('book', 'rating_count')
    op.drop_column('book', 'popularity_score')
    op.add_column('serie', sa.Column(
        'content_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_serie_content_id'), 'serie',
                    ['content_id'], unique=False)
    op.drop_index('ix_serie_serie_id', table_name='serie')
    op.create_foreign_key(None, 'serie', 'content', ['content_id'], [
                          'content_id'], ondelete='CASCADE')
    op.drop_constraint('episode_serie_id_fkey', 'episode', type_='foreignkey')
    op.drop_constraint('serie_pkey', 'serie', type_='primary')
    op.create_primary_key('serie_pkey', 'serie', ['content_id'])
    op.drop_index('ix_episode_episode_id', table_name='episode')
    op.drop_column('serie', 'rating_count')
    op.drop_column('serie', 'rating')
    op.drop_column('serie', 'serie_id')
    op.drop_column('serie', 'popularity_score')
    op.add_column('episode', sa.Column(
        'content_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_episode_content_id'),
                    'episode', ['content_id'], unique=False)
    op.create_foreign_key(None, 'episode', 'content', ['content_id'], [
                          'content_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'episode', 'serie', [
                          'serie_id'], ['content_id'])
    op.drop_constraint('episode_pkey', 'episode', type_='primary')
    op.create_primary_key('episode_pkey', 'episode', ['content_id'])
    op.drop_column('episode', 'episode_id')
    op.add_column('game', sa.Column(
        'content_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_game_content_id'), 'game',
                    ['content_id'], unique=False)
    op.drop_index('ix_game_game_id', table_name='game')
    op.create_foreign_key(None, 'game', 'content', ['content_id'], [
                          'content_id'], ondelete='CASCADE')
    op.drop_constraint('game_pkey', 'game', type_='primary')
    op.create_primary_key('game_pkey', 'game', ['content_id'])
    op.drop_column('game', 'game_id')
    op.drop_column('game', 'rating')
    op.drop_column('game', 'rating_count')
    op.drop_column('game', 'popularity_score')
    op.add_column('movie', sa.Column(
        'content_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_movie_content_id'), 'movie',
                    ['content_id'], unique=False)
    op.drop_index('ix_movie_movie_id', table_name='movie')
    op.create_foreign_key(None, 'movie', 'content', ['content_id'], [
                          'content_id'], ondelete='CASCADE')
    op.drop_constraint('movie_pkey', 'movie', type_='primary')
    op.create_primary_key('movie_pkey', 'movie', ['content_id'])
    op.drop_column('movie', 'movie_id')
    op.drop_column('movie', 'rating')
    op.drop_column('movie', 'rating_count')
    op.drop_column('movie', 'popularity_score')
    op.add_column('track', sa.Column(
        'content_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_track_content_id'), 'track',
                    ['content_id'], unique=False)
    op.drop_index('ix_track_track_id', table_name='track')
    op.create_foreign_key(None, 'track', 'content', ['content_id'], [
                          'content_id'], ondelete='CASCADE')
    op.drop_constraint('track_pkey', 'track', type_='primary')
    op.create_primary_key('track_pkey', 'track', ['content_id'])
    op.drop_column('track', 'track_id')
    op.drop_column('track', 'rating')
    op.drop_column('track', 'rating_count')
    op.drop_column('track', 'popularity_score')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('track', sa.Column('popularity_score', postgresql.DOUBLE_PRECISION(
        precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True))
    op.add_column('track', sa.Column('rating_count',
                                     sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('track', sa.Column('rating', postgresql.DOUBLE_PRECISION(
        precision=53), autoincrement=False, nullable=True))
    op.add_column('track', sa.Column('track_id', sa.INTEGER(),
                                     autoincrement=True, nullable=False))
    op.drop_constraint(None, 'track', type_='foreignkey')
    op.create_index('ix_track_track_id', 'track', ['track_id'], unique=False)
    op.drop_index(op.f('ix_track_content_id'), table_name='track')
    op.drop_column('track', 'content_id')
    op.add_column('serie', sa.Column('popularity_score', postgresql.DOUBLE_PRECISION(
        precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True))
    op.add_column('serie', sa.Column('serie_id', sa.INTEGER(),
                                     autoincrement=True, nullable=False))
    op.add_column('serie', sa.Column('rating', postgresql.DOUBLE_PRECISION(
        precision=53), autoincrement=False, nullable=True))
    op.add_column('serie', sa.Column('rating_count',
                                     sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'serie', type_='foreignkey')
    op.create_index('ix_serie_serie_id', 'serie', ['serie_id'], unique=False)
    op.drop_index(op.f('ix_serie_content_id'), table_name='serie')
    op.drop_column('serie', 'content_id')
    op.add_column('movie', sa.Column('popularity_score', postgresql.DOUBLE_PRECISION(
        precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True))
    op.add_column('movie', sa.Column('rating_count',
                                     sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('movie', sa.Column('rating', postgresql.DOUBLE_PRECISION(
        precision=53), autoincrement=False, nullable=True))
    op.add_column('movie', sa.Column('movie_id', sa.INTEGER(),
                                     autoincrement=True, nullable=False))
    op.drop_constraint(None, 'movie', type_='foreignkey')
    op.create_index('ix_movie_movie_id', 'movie', ['movie_id'], unique=False)
    op.drop_index(op.f('ix_movie_content_id'), table_name='movie')
    op.drop_column('movie', 'content_id')
    op.add_column('game', sa.Column('popularity_score', postgresql.DOUBLE_PRECISION(
        precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('rating_count', sa.INTEGER(
    ), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('rating', postgresql.DOUBLE_PRECISION(
        precision=53), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('game_id', sa.INTEGER(),
                                    autoincrement=True, nullable=False))
    op.drop_constraint(None, 'game', type_='foreignkey')
    op.create_index('ix_game_game_id', 'game', ['game_id'], unique=False)
    op.drop_index(op.f('ix_game_content_id'), table_name='game')
    op.drop_column('game', 'content_id')
    op.add_column('episode', sa.Column(
        'episode_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'episode', type_='foreignkey')
    op.drop_constraint(None, 'episode', type_='foreignkey')
    op.create_foreign_key('episode_serie_id_fkey', 'episode',
                          'serie', ['serie_id'], ['serie_id'])
    op.create_index('ix_episode_episode_id', 'episode',
                    ['episode_id'], unique=False)
    op.drop_index(op.f('ix_episode_content_id'), table_name='episode')
    op.drop_column('episode', 'content_id')
    op.add_column('book', sa.Column('popularity_score', postgresql.DOUBLE_PRECISION(
        precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True))
    op.add_column('book', sa.Column('rating_count', sa.INTEGER(),
                                    autoincrement=False, nullable=True))
    op.add_column('book', sa.Column('rating', postgresql.DOUBLE_PRECISION(
        precision=53), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'book', type_='foreignkey')
    op.drop_index(op.f('ix_book_isbn'), table_name='book')
    op.create_index('ix_book_isbn', 'book', ['isbn'], unique=False)
    op.drop_index(op.f('ix_book_content_id'), table_name='book')
    op.drop_column('book', 'content_id')
    op.add_column('application', sa.Column('popularity_score', postgresql.DOUBLE_PRECISION(
        precision=53), server_default=sa.text("'0'::double precision"), autoincrement=False, nullable=True))
    op.add_column('application', sa.Column('rating', postgresql.DOUBLE_PRECISION(
        precision=53), autoincrement=False, nullable=True))
    op.add_column('application', sa.Column(
        'app_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('application', sa.Column(
        'reviews', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'application', type_='foreignkey')
    op.create_index('ix_application_app_id', 'application',
                    ['app_id'], unique=False)
    op.drop_index(op.f('ix_application_content_id'), table_name='application')
    op.drop_column('application', 'content_id')
    op.drop_table('recommended_content_for_group')
    op.drop_table('similars_content')
    op.drop_table('recommended_content')
    op.drop_table('meta_user_content')
    op.drop_table('content_genres')
    op.drop_table('bad_recommendation_content')
    op.drop_index(op.f('ix_content_content_id'), table_name='content')
    op.drop_table('content')
    # ### end Alembic commands ###
